<Project Sdk="Microsoft.NET.Sdk.Web">

    <PropertyGroup>
        <TargetFramework>net5.0</TargetFramework>
        <UserSecretsId>aspnet-Enfo.WebApp-A834A848-D8DF-4E5F-B1E2-7EE74113BF3E</UserSecretsId>
        <WebRoot>wwwroot\</WebRoot>
        <DefaultItemExcludes>$(DefaultItemExcludes);node_modules\**</DefaultItemExcludes>
    </PropertyGroup>
    
    <ItemGroup>
        <PackageReference Include="AsyncFixer" Version="1.5.1" Condition="'$(Configuration)' == 'Debug'">
          <PrivateAssets>all</PrivateAssets>
          <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
        <PackageReference Include="Microsoft.AspNetCore.Authentication.AzureAD.UI" Version="5.0.5" />
        <PackageReference Include="Microsoft.AspNetCore.Mvc.Razor.RuntimeCompilation" Version="5.0.5" Condition="'$(Configuration)' == 'Debug'" />
        <PackageReference Include="Microsoft.EntityFrameworkCore.SqlServer" Version="5.0.5" />
        <PackageReference Include="Mindscape.Raygun4Net.AspNetCore" Version="6.5.0" />
        <PackageReference Include="SonarAnalyzer.CSharp" Version="8.20.0.28934" Condition="'$(Configuration)' == 'Debug'">
          <PrivateAssets>all</PrivateAssets>
          <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
    </ItemGroup>

    <ItemGroup>
      <ProjectReference Include="..\Enfo.Infrastructure\Enfo.Infrastructure.csproj" />
    </ItemGroup>

    <ItemGroup>
      <Content Update="appsettings.Development.json">
        <DependentUpon>appsettings.json</DependentUpon>
      </Content>
      <Content Update="appsettings.Local.json">
        <DependentUpon>appsettings.json</DependentUpon>
      </Content>
    </ItemGroup>

    <Target Name="NpmInstall" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('node_modules') ">
        <!-- Ensure Node.js is installed -->
        <Exec Command="node --version" ContinueOnError="true">
            <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
        </Exec>
        <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
        <!-- Ensure pnpm is installed -->
        <Exec Command="pnpm --version" ContinueOnError="true">
            <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
        </Exec>
        <Error Condition="'$(ErrorCode)' != '0'" Text="This project is configured to use pnpm (instead of npm). To continue, please install pnpm or reconfigure to use npm." />
        <Message Importance="high" Text="Restoring dependencies using 'pnpm'. This may take several minutes..." />
        <Exec Command="pnpm install" />
    </Target>

    <Target Name="NpmRunBuild" BeforeTargets="Build" DependsOnTargets="NpmInstall" Condition=" '$(Configuration)' == 'Debug' ">
        <Message Importance="high" Text="Running npm build task (webpack)..." />
        <Exec Command="pnpm run pack" />
    </Target>

    <Target Name="NpmRunBuildProd" BeforeTargets="Build" DependsOnTargets="NpmInstall" Condition=" '$(Configuration)' != 'Debug' ">
        <Message Importance="high" Text="Running npm build-prod task (webpack)..." />
        <Exec Command="pnpm run pack-prod" />
    </Target>

    <Target Name="NpmClean" BeforeTargets="Clean">
        <RemoveDir Directories="$(WebRoot)dist" />
    </Target>

</Project>
