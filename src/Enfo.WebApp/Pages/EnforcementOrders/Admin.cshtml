@page "{id}"
@using Enfo.WebApp.Models
@model Enfo.WebApp.Pages.EnforcementOrders.Admin

@{
    ViewData["Title"] = $"Enforcement Order {Model.Item.OrderNumber}";
}

<partial name="_AlertPartial" for="Message" />

<h2>
    @ViewData["Title"]
</h2>

<div class="gaepd-noprint">
    <a asp-page="Details" asp-route-id="@Model.Item.Id" class="btn btn-sm btn-outline-primary">Go to public view</a>
</div>

@if (Model.Item.Deleted)
{
    @await Html.PartialAsync("_AlertPartial", new DisplayMessage(Context.Warning,
        "This enforcement order has been deleted and will not be displayed to the public.", false))
}

<table class="gaepd-table-compact gaepd-table-rowheadings gaepd-table-autowidth">
    <tbody>
    <tr>
        <th scope="row">@Html.DisplayNameFor(m => m.Item.PublicationStatus)</th>
        <td>@Html.DisplayFor(m => m.Item.PublicationStatus)</td>
    </tr>
    <tr>
        <th scope="row">@Html.DisplayNameFor(m => m.Item.FacilityName)</th>
        <td>@Html.DisplayFor(m => m.Item.FacilityName)</td>
    </tr>
    <tr>
        <th scope="row">@Html.DisplayNameFor(m => m.Item.County)</th>
        <td>@Html.DisplayFor(m => m.Item.County) County</td>
    </tr>
    <tr>
        <th scope="row">@Html.DisplayNameFor(m => m.Item.Cause)</th>
        <td>@Html.DisplayFor(m => m.Item.Cause)</td>
    </tr>
    <tr>
        <th scope="row">@Html.DisplayNameFor(m => m.Item.Requirements)</th>
        <td>@Html.DisplayFor(m => m.Item.Requirements)</td>
    </tr>
    <tr>
        <th scope="row">@(Model.Item.IsExecutedOrder ? "" : "Proposed ")@Html.DisplayNameFor(m => m.Item.SettlementAmount)</th>
        <td>@Html.DisplayFor(m => m.Item.SettlementAmount)</td>
    </tr>
    <tr>
        <th scope="row">@Html.DisplayNameFor(m => m.Item.LegalAuthority)</th>
        <td>@Html.DisplayFor(m => m.Item.LegalAuthority.AuthorityName)</td>
    </tr>

    @if (Model.Item.IsProposedOrder)
    {
        <tr>
            <th scope="row">@Html.DisplayNameFor(m => m.Item.ProposedOrderPostedDate)</th>
            <td>@Html.DisplayFor(m => m.Item.ProposedOrderPostedDate)</td>
        </tr>
        <tr>
            <th scope="row">@Html.DisplayNameFor(m => m.Item.CommentPeriodClosesDate)</th>
            <td>@Html.DisplayFor(m => m.Item.CommentPeriodClosesDate)</td>
        </tr>
        <tr>
            <th scope="row">@Html.DisplayNameFor(m => m.Item.CommentContact)</th>
            <td>
                @if (Model.Item.CommentContact != null)
                {
                    @Html.DisplayFor(m => m.Item.CommentContact.ContactName)<br />
                    @Html.DisplayFor(m => m.Item.CommentContact.Title)<br />
                    @Html.DisplayFor(m => m.Item.CommentContact.Organization)<br />
                    @if (Model.Item.CommentContact.Address != null)
                    {
                        @Model.Item.CommentContact.Address.ToString()<br />
                    }
                    @if (Model.Item.CommentContact.Email != null)
                    {
                        <br />
                        <a href="mailto:@(Model.Item.CommentContact.Email)">@Html.DisplayFor(m => m.Item.CommentContact.Email)</a>
                        <br />
                    }
                    <br />
                    @Html.DisplayFor(m => m.Item.CommentContact.Telephone)
                }
            </td>
        </tr>
    }

    @if (Model.Item.IsExecutedOrder)
    {
        <tr>
            <th scope="row">@Html.DisplayNameFor(m => m.Item.ExecutedDate)</th>
            <td>@Html.DisplayFor(m => m.Item.ExecutedDate)</td>
        </tr>
    }

    @if (Model.Item.IsHearingScheduled)
    {
        <tr>
            <th scope="row">@Html.DisplayNameFor(m => m.Item.IsHearingScheduled)</th>
            <td>
            <p>
                <em>@Html.DisplayNameFor(m => m.Item.HearingDate)</em><br />
                @Html.DisplayFor(m => m.Item.HearingDate)
            </p>
            <p>
                <em>@Html.DisplayNameFor(m => m.Item.HearingLocation)</em><br />
                @Html.DisplayFor(m => m.Item.HearingLocation)
            </p>
            <p>
                <em>@Html.DisplayNameFor(m => m.Item.HearingCommentPeriodClosesDate)</em><br />
                @Html.DisplayFor(m => m.Item.HearingCommentPeriodClosesDate)
            </p>
            <p>
                <em>@Html.DisplayNameFor(m => m.Item.HearingContact)</em><br />
                @if (Model.Item.HearingContact != null)
                {
                    @Html.DisplayFor(m => m.Item.HearingContact.ContactName)<br />
                    @Html.DisplayFor(m => m.Item.HearingContact.Title)<br />
                    @Html.DisplayFor(m => m.Item.HearingContact.Organization)<br />
                    @if (Model.Item.HearingContact.Address != null)
                    {
                        @Model.Item.HearingContact.Address.ToString()<br />
                    }
                    @if (Model.Item.HearingContact.Email != null)
                    {
                        <br />
                        <a href="mailto:@Html.DisplayFor(m => m.Item.HearingContact.Email)">@Html.DisplayFor(m => m.Item.HearingContact.Email)</a>
                    }
                    <br />
                    @Html.DisplayFor(m => m.Item.HearingContact.Telephone)
                }
            </p>
        </tr>
    }
    </tbody>
</table>

<div>
    @if (Model.Item.Deleted)
    {
        <a asp-page="Restore" asp-route-id="@Model.Item.Id" class="usa-button usa-button-secondary">Restore deleted order</a>
    }
    else
    {
        <a asp-page="Edit" asp-route-id="@Model.Item.Id" class="usa-button usa-button-outline">Edit</a>
        <a asp-page="Delete" asp-route-id="@Model.Item.Id" class="usa-button usa-button-secondary">Delete</a>
    }
</div>