@page "{id}"
@model Enfo.WebApp.Pages.Details
@{
    ViewData["Title"] = $"Enforcement Order {Model.Item.OrderNumber}";
}
<partial name="_AlertPartial" for="Message" />

<h1>@ViewData["Title"]</h1>

@if (User?.Identity?.IsAuthenticated == true)
{
    <div class="gaepd-noprint">
        <a asp-page="/Admin/Details" asp-route-id="@Model.Item.Id">Go to admin view</a>
    </div>
}

<table class="gaepd-table-compact gaepd-table-rowheadings gaepd-table-autowidth">
    <tbody>
    <tr>
        <th scope="row">@Html.DisplayNameFor(m => m.Item.FacilityName)</th>
        <td>@Html.DisplayFor(m => m.Item.FacilityName)</td>
    </tr>
    <tr>
        <th scope="row">@Html.DisplayNameFor(m => m.Item.County)</th>
        <td>@Html.DisplayFor(m => m.Item.County) County</td>
    </tr>
    <tr>
        <th scope="row">@Html.DisplayNameFor(m => m.Item.Cause)</th>
        <td>@Html.DisplayFor(m => m.Item.Cause)</td>
    </tr>
    <tr>
        <th scope="row">@Html.DisplayNameFor(m => m.Item.Requirements)</th>
        <td>@Html.DisplayFor(m => m.Item.Requirements)</td>
    </tr>
    <tr>
        <th scope="row">@(Model.Item.IsExecutedOrder ? "" : "Proposed ")@Html.DisplayNameFor(m => m.Item.SettlementAmount)</th>
        <td>@Html.DisplayFor(m => m.Item.SettlementAmount)</td>
    </tr>
    <tr>
        <th scope="row">@Html.DisplayNameFor(m => m.Item.LegalAuthority)</th>
        <td>@Html.DisplayFor(m => m.Item.LegalAuthority.AuthorityName)</td>
    </tr>

    @if (Model.Item.IsPublicProposedOrder)
    {
        <tr>
            <th scope="row">@Html.DisplayNameFor(m => m.Item.ProposedOrderPostedDate)</th>
            <td>@Html.DisplayFor(m => m.Item.ProposedOrderPostedDate)</td>
        </tr>
        <tr>
            <th scope="row">@Html.DisplayNameFor(m => m.Item.CommentPeriodClosesDate)</th>
            <td>@Html.DisplayFor(m => m.Item.CommentPeriodClosesDate)</td>
        </tr>
        @if (Model.Item.CommentPeriodClosesDate.HasValue
            && Model.Item.CommentPeriodClosesDate.Value >= DateTime.Today
            && Model.Item.CommentContact != null)
        {
            <tr>
                <th scope="row">@Html.DisplayNameFor(m => m.Item.CommentContact)</th>
                <td>@Html.DisplayFor(m => m.Item.CommentContact, "EpdContactView")</td>
            </tr>
        }
    }

    @if (Model.Item.IsPublicExecutedOrder)
    {
        <tr>
            <th scope="row">@Html.DisplayNameFor(m => m.Item.ExecutedDate)</th>
            <td>@Html.DisplayFor(m => m.Item.ExecutedDate)</td>
        </tr>
        <tr>
            <th scope="row">@Html.DisplayNameFor(m => m.Item.ExecutedOrderPostedDate)</th>
            <td>@Html.DisplayFor(m => m.Item.ExecutedOrderPostedDate)</td>
        </tr>
    }

    @if (Model.Item.IsHearingScheduled)
    {
        <tr>
            <th scope="row">@Html.DisplayNameFor(m => m.Item.IsHearingScheduled)</th>
            <td>
            <p>
                <em>@Html.DisplayNameFor(m => m.Item.HearingDate)</em><br />
                @Html.DisplayFor(m => m.Item.HearingDate)
            </p>
            <p>
                <em>@Html.DisplayNameFor(m => m.Item.HearingLocation)</em><br />
                @Html.DisplayFor(m => m.Item.HearingLocation)
            </p>
            <p>
                <em>@Html.DisplayNameFor(m => m.Item.HearingCommentPeriodClosesDate)</em><br />
                @Html.DisplayFor(m => m.Item.HearingCommentPeriodClosesDate)
            </p>
            @if (Model.Item.HearingCommentPeriodClosesDate.HasValue
                && Model.Item.HearingCommentPeriodClosesDate.Value >= DateTime.Today
                && Model.Item.HearingContact != null)
            {
                <p>
                    <em>@Html.DisplayNameFor(m => m.Item.HearingContact)</em>
                </p>
                @Html.DisplayFor(m => m.Item.HearingContact, "EpdContactView")
            }
        </tr>
    }
    </tbody>
</table>