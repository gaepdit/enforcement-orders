// <auto-generated />
using System;
using Enfo.Infrastructure.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Enfo.API.Migrations
{
    [DbContext(typeof(EnfoDbContext))]
    [Migration("20200224170940_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2");

            modelBuilder.Entity("Enfo.Domain.Entities.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Active")
                        .HasColumnType("INTEGER");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.Property<Guid?>("CreatedById")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset?>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("PostalCode")
                        .HasColumnType("TEXT")
                        .HasMaxLength(10);

                    b.Property<string>("State")
                        .HasColumnType("TEXT")
                        .HasMaxLength(2);

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.Property<string>("Street2")
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("BLOB");

                    b.Property<Guid?>("UpdatedById")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset?>("UpdatedDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            Id = 2000,
                            Active = true,
                            City = "Atlanta",
                            CreatedById = new Guid("cecdb2c3-101c-45ef-2f05-08d4881df634"),
                            CreatedDate = new DateTimeOffset(new DateTime(2017, 4, 27, 21, 13, 3, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, 0, 0, 0)),
                            PostalCode = "30354",
                            State = "GA",
                            Street = "4244 International Parkway",
                            Street2 = "Suite 120",
                            UpdatedById = new Guid("cecdb2c3-101c-45ef-2f05-08d4881df634"),
                            UpdatedDate = new DateTimeOffset(new DateTime(2017, 4, 27, 21, 13, 3, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, 0, 0, 0))
                        },
                        new
                        {
                            Id = 2001,
                            Active = false,
                            City = "Atlanta",
                            CreatedById = new Guid("cecdb2c3-101c-45ef-2f05-08d4881df634"),
                            CreatedDate = new DateTimeOffset(new DateTime(2017, 4, 27, 21, 13, 3, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, 0, 0, 0)),
                            PostalCode = "30354",
                            State = "GA",
                            Street = "4244 International Parkway",
                            Street2 = "Suite 104",
                            UpdatedById = new Guid("c076cda6-8344-4bde-8a3a-2c96dc4de932"),
                            UpdatedDate = new DateTimeOffset(new DateTime(2017, 5, 3, 14, 35, 57, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, 0, 0, 0))
                        },
                        new
                        {
                            Id = 2002,
                            Active = true,
                            City = "Atlanta",
                            CreatedById = new Guid("cecdb2c3-101c-45ef-2f05-08d4881df634"),
                            CreatedDate = new DateTimeOffset(new DateTime(2017, 4, 27, 21, 13, 3, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, 0, 0, 0)),
                            PostalCode = "30334",
                            State = "GA",
                            Street = "2 Martin Luther King Jr. Drive SE",
                            Street2 = "Suite 1054 East",
                            UpdatedById = new Guid("c076cda6-8344-4bde-8a3a-2c96dc4de932"),
                            UpdatedDate = new DateTimeOffset(new DateTime(2017, 5, 3, 14, 47, 33, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, 0, 0, 0))
                        },
                        new
                        {
                            Id = 2003,
                            Active = false,
                            City = "Unknown",
                            CreatedById = new Guid("cecdb2c3-101c-45ef-2f05-08d4881df634"),
                            CreatedDate = new DateTimeOffset(new DateTime(2017, 4, 27, 21, 13, 3, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, 0, 0, 0)),
                            PostalCode = "00000",
                            State = "GA",
                            Street = "Unknown",
                            Street2 = "",
                            UpdatedById = new Guid("c076cda6-8344-4bde-8a3a-2c96dc4de932"),
                            UpdatedDate = new DateTimeOffset(new DateTime(2017, 5, 3, 14, 45, 37, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, 0, 0, 0))
                        },
                        new
                        {
                            Id = 2004,
                            Active = true,
                            City = "Atlanta",
                            CreatedById = new Guid("cecdb2c3-101c-45ef-2f05-08d4881df634"),
                            CreatedDate = new DateTimeOffset(new DateTime(2017, 4, 27, 21, 13, 3, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, 0, 0, 0)),
                            PostalCode = "30334",
                            State = "GA",
                            Street = "2 Martin Luther King Jr. Drive SE",
                            Street2 = "Suite 1152 East",
                            UpdatedById = new Guid("c076cda6-8344-4bde-8a3a-2c96dc4de932"),
                            UpdatedDate = new DateTimeOffset(new DateTime(2017, 5, 3, 14, 48, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, 0, 0, 0))
                        },
                        new
                        {
                            Id = 2007,
                            Active = false,
                            City = "Albany",
                            CreatedById = new Guid("cecdb2c3-101c-45ef-2f05-08d4881df634"),
                            CreatedDate = new DateTimeOffset(new DateTime(2017, 4, 27, 21, 13, 3, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, 0, 0, 0)),
                            PostalCode = "31701-3576",
                            State = "GA",
                            Street = "2024 Newton Road",
                            Street2 = "",
                            UpdatedById = new Guid("c076cda6-8344-4bde-8a3a-2c96dc4de932"),
                            UpdatedDate = new DateTimeOffset(new DateTime(2017, 5, 3, 14, 45, 18, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, 0, 0, 0))
                        },
                        new
                        {
                            Id = 2008,
                            Active = false,
                            City = "Brunswick",
                            CreatedById = new Guid("cecdb2c3-101c-45ef-2f05-08d4881df634"),
                            CreatedDate = new DateTimeOffset(new DateTime(2017, 4, 27, 21, 13, 3, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, 0, 0, 0)),
                            PostalCode = "31523",
                            State = "GA",
                            Street = "400 Commerce Center Drive",
                            Street2 = "",
                            UpdatedById = new Guid("c076cda6-8344-4bde-8a3a-2c96dc4de932"),
                            UpdatedDate = new DateTimeOffset(new DateTime(2017, 5, 3, 14, 45, 12, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, 0, 0, 0))
                        },
                        new
                        {
                            Id = 2009,
                            Active = false,
                            City = "Macon",
                            CreatedById = new Guid("cecdb2c3-101c-45ef-2f05-08d4881df634"),
                            CreatedDate = new DateTimeOffset(new DateTime(2017, 4, 27, 21, 13, 3, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, 0, 0, 0)),
                            PostalCode = "31211",
                            State = "GA",
                            Street = "2640 Shurling Drive",
                            Street2 = "",
                            UpdatedById = new Guid("c076cda6-8344-4bde-8a3a-2c96dc4de932"),
                            UpdatedDate = new DateTimeOffset(new DateTime(2017, 5, 3, 14, 45, 7, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, 0, 0, 0))
                        },
                        new
                        {
                            Id = 2010,
                            Active = false,
                            City = "Cartersville",
                            CreatedById = new Guid("cecdb2c3-101c-45ef-2f05-08d4881df634"),
                            CreatedDate = new DateTimeOffset(new DateTime(2017, 4, 27, 21, 13, 3, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, 0, 0, 0)),
                            PostalCode = "30120",
                            State = "GA",
                            Street = "Post Office Box 3250",
                            Street2 = "",
                            UpdatedById = new Guid("c076cda6-8344-4bde-8a3a-2c96dc4de932"),
                            UpdatedDate = new DateTimeOffset(new DateTime(2017, 5, 3, 14, 45, 2, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, 0, 0, 0))
                        },
                        new
                        {
                            Id = 2011,
                            Active = false,
                            City = "Athens",
                            CreatedById = new Guid("cecdb2c3-101c-45ef-2f05-08d4881df634"),
                            CreatedDate = new DateTimeOffset(new DateTime(2017, 4, 27, 21, 13, 3, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, 0, 0, 0)),
                            PostalCode = "30605",
                            State = "GA",
                            Street = "745 Gaines School Road",
                            Street2 = "",
                            UpdatedById = new Guid("c076cda6-8344-4bde-8a3a-2c96dc4de932"),
                            UpdatedDate = new DateTimeOffset(new DateTime(2017, 5, 3, 14, 44, 39, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, 0, 0, 0))
                        },
                        new
                        {
                            Id = 2012,
                            Active = false,
                            City = "Augusta",
                            CreatedById = new Guid("cecdb2c3-101c-45ef-2f05-08d4881df634"),
                            CreatedDate = new DateTimeOffset(new DateTime(2017, 4, 27, 21, 13, 3, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, 0, 0, 0)),
                            PostalCode = "30906",
                            State = "GA",
                            Street = "1885 Tobacco Road",
                            Street2 = "",
                            UpdatedById = new Guid("c076cda6-8344-4bde-8a3a-2c96dc4de932"),
                            UpdatedDate = new DateTimeOffset(new DateTime(2017, 5, 3, 14, 44, 57, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, 0, 0, 0))
                        },
                        new
                        {
                            Id = 2013,
                            Active = false,
                            City = "Cartersville",
                            CreatedById = new Guid("cecdb2c3-101c-45ef-2f05-08d4881df634"),
                            CreatedDate = new DateTimeOffset(new DateTime(2017, 4, 27, 21, 13, 3, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, 0, 0, 0)),
                            PostalCode = "30120",
                            State = "GA",
                            Street = "Post Office Box 3250",
                            Street2 = "",
                            UpdatedById = new Guid("c076cda6-8344-4bde-8a3a-2c96dc4de932"),
                            UpdatedDate = new DateTimeOffset(new DateTime(2017, 5, 3, 14, 44, 50, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, 0, 0, 0))
                        },
                        new
                        {
                            Id = 2014,
                            Active = false,
                            City = "Augusta",
                            CreatedById = new Guid("cecdb2c3-101c-45ef-2f05-08d4881df634"),
                            CreatedDate = new DateTimeOffset(new DateTime(2017, 4, 27, 21, 13, 3, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, 0, 0, 0)),
                            PostalCode = "30909",
                            State = "GA",
                            Street = "3525 Walton Way Ext.",
                            Street2 = "",
                            UpdatedById = new Guid("c076cda6-8344-4bde-8a3a-2c96dc4de932"),
                            UpdatedDate = new DateTimeOffset(new DateTime(2017, 5, 3, 14, 44, 45, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, 0, 0, 0))
                        },
                        new
                        {
                            Id = 2015,
                            Active = true,
                            City = "Atlanta",
                            CreatedById = new Guid("cecdb2c3-101c-45ef-2f05-08d4881df634"),
                            CreatedDate = new DateTimeOffset(new DateTime(2017, 4, 27, 21, 13, 3, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, 0, 0, 0)),
                            PostalCode = "30354-3906",
                            State = "GA",
                            Street = "4244 International Pkwy",
                            Street2 = "Suite 120",
                            UpdatedById = new Guid("cecdb2c3-101c-45ef-2f05-08d4881df634"),
                            UpdatedDate = new DateTimeOffset(new DateTime(2017, 4, 27, 21, 13, 3, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, 0, 0, 0))
                        },
                        new
                        {
                            Id = 2016,
                            Active = true,
                            City = "Atlanta",
                            CreatedById = new Guid("c076cda6-8344-4bde-8a3a-2c96dc4de932"),
                            CreatedDate = new DateTimeOffset(new DateTime(2017, 5, 3, 14, 48, 43, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, 0, 0, 0)),
                            PostalCode = "30334",
                            State = "GA",
                            Street = "2 Martin Luther King Jr. Drive SE",
                            Street2 = "Suite 1456 East",
                            UpdatedById = new Guid("c076cda6-8344-4bde-8a3a-2c96dc4de932"),
                            UpdatedDate = new DateTimeOffset(new DateTime(2017, 5, 3, 14, 48, 43, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, 0, 0, 0))
                        });
                });

            modelBuilder.Entity("Enfo.Domain.Entities.County", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CountyName")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(20);

                    b.Property<Guid?>("CreatedById")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset?>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("BLOB");

                    b.Property<Guid?>("UpdatedById")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset?>("UpdatedDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Counties");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountyName = "Appling"
                        },
                        new
                        {
                            Id = 2,
                            CountyName = "Atkinson"
                        },
                        new
                        {
                            Id = 3,
                            CountyName = "Bacon"
                        },
                        new
                        {
                            Id = 4,
                            CountyName = "Baker"
                        },
                        new
                        {
                            Id = 5,
                            CountyName = "Baldwin"
                        },
                        new
                        {
                            Id = 6,
                            CountyName = "Banks"
                        },
                        new
                        {
                            Id = 7,
                            CountyName = "Barrow"
                        },
                        new
                        {
                            Id = 8,
                            CountyName = "Bartow"
                        },
                        new
                        {
                            Id = 9,
                            CountyName = "Ben Hill"
                        },
                        new
                        {
                            Id = 10,
                            CountyName = "Berrien"
                        },
                        new
                        {
                            Id = 11,
                            CountyName = "Bibb"
                        },
                        new
                        {
                            Id = 12,
                            CountyName = "Bleckley"
                        },
                        new
                        {
                            Id = 13,
                            CountyName = "Brantley"
                        },
                        new
                        {
                            Id = 14,
                            CountyName = "Brooks"
                        },
                        new
                        {
                            Id = 15,
                            CountyName = "Bryan"
                        },
                        new
                        {
                            Id = 16,
                            CountyName = "Bulloch"
                        },
                        new
                        {
                            Id = 17,
                            CountyName = "Burke"
                        },
                        new
                        {
                            Id = 18,
                            CountyName = "Butts"
                        },
                        new
                        {
                            Id = 19,
                            CountyName = "Calhoun"
                        },
                        new
                        {
                            Id = 20,
                            CountyName = "Camden"
                        },
                        new
                        {
                            Id = 21,
                            CountyName = "Candler"
                        },
                        new
                        {
                            Id = 22,
                            CountyName = "Carroll"
                        },
                        new
                        {
                            Id = 23,
                            CountyName = "Catoosa"
                        },
                        new
                        {
                            Id = 24,
                            CountyName = "Charlton"
                        },
                        new
                        {
                            Id = 25,
                            CountyName = "Chatham"
                        },
                        new
                        {
                            Id = 26,
                            CountyName = "Chattahoochee"
                        },
                        new
                        {
                            Id = 27,
                            CountyName = "Chattooga"
                        },
                        new
                        {
                            Id = 28,
                            CountyName = "Cherokee"
                        },
                        new
                        {
                            Id = 29,
                            CountyName = "Clarke"
                        },
                        new
                        {
                            Id = 30,
                            CountyName = "Clay"
                        },
                        new
                        {
                            Id = 31,
                            CountyName = "Clayton"
                        },
                        new
                        {
                            Id = 32,
                            CountyName = "Clinch"
                        },
                        new
                        {
                            Id = 33,
                            CountyName = "Cobb"
                        },
                        new
                        {
                            Id = 34,
                            CountyName = "Coffee"
                        },
                        new
                        {
                            Id = 35,
                            CountyName = "Colquitt"
                        },
                        new
                        {
                            Id = 36,
                            CountyName = "Columbia"
                        },
                        new
                        {
                            Id = 37,
                            CountyName = "Cook"
                        },
                        new
                        {
                            Id = 38,
                            CountyName = "Coweta"
                        },
                        new
                        {
                            Id = 39,
                            CountyName = "Crawford"
                        },
                        new
                        {
                            Id = 40,
                            CountyName = "Crisp"
                        },
                        new
                        {
                            Id = 41,
                            CountyName = "Dade"
                        },
                        new
                        {
                            Id = 42,
                            CountyName = "Dawson"
                        },
                        new
                        {
                            Id = 43,
                            CountyName = "Decatur"
                        },
                        new
                        {
                            Id = 44,
                            CountyName = "DeKalb"
                        },
                        new
                        {
                            Id = 45,
                            CountyName = "Dodge"
                        },
                        new
                        {
                            Id = 46,
                            CountyName = "Dooly"
                        },
                        new
                        {
                            Id = 47,
                            CountyName = "Dougherty"
                        },
                        new
                        {
                            Id = 48,
                            CountyName = "Douglas"
                        },
                        new
                        {
                            Id = 49,
                            CountyName = "Early"
                        },
                        new
                        {
                            Id = 50,
                            CountyName = "Echols"
                        },
                        new
                        {
                            Id = 51,
                            CountyName = "Effingham"
                        },
                        new
                        {
                            Id = 52,
                            CountyName = "Elbert"
                        },
                        new
                        {
                            Id = 53,
                            CountyName = "Emanuel"
                        },
                        new
                        {
                            Id = 54,
                            CountyName = "Evans"
                        },
                        new
                        {
                            Id = 55,
                            CountyName = "Fannin"
                        },
                        new
                        {
                            Id = 56,
                            CountyName = "Fayette"
                        },
                        new
                        {
                            Id = 57,
                            CountyName = "Floyd"
                        },
                        new
                        {
                            Id = 58,
                            CountyName = "Forsyth"
                        },
                        new
                        {
                            Id = 59,
                            CountyName = "Franklin"
                        },
                        new
                        {
                            Id = 60,
                            CountyName = "Fulton"
                        },
                        new
                        {
                            Id = 61,
                            CountyName = "Gilmer"
                        },
                        new
                        {
                            Id = 62,
                            CountyName = "Glascock"
                        },
                        new
                        {
                            Id = 63,
                            CountyName = "Glynn"
                        },
                        new
                        {
                            Id = 64,
                            CountyName = "Gordon"
                        },
                        new
                        {
                            Id = 65,
                            CountyName = "Grady"
                        },
                        new
                        {
                            Id = 66,
                            CountyName = "Greene"
                        },
                        new
                        {
                            Id = 67,
                            CountyName = "Gwinnett"
                        },
                        new
                        {
                            Id = 68,
                            CountyName = "Habersham"
                        },
                        new
                        {
                            Id = 69,
                            CountyName = "Hall"
                        },
                        new
                        {
                            Id = 70,
                            CountyName = "Hancock"
                        },
                        new
                        {
                            Id = 71,
                            CountyName = "Haralson"
                        },
                        new
                        {
                            Id = 72,
                            CountyName = "Harris"
                        },
                        new
                        {
                            Id = 73,
                            CountyName = "Hart"
                        },
                        new
                        {
                            Id = 74,
                            CountyName = "Heard"
                        },
                        new
                        {
                            Id = 75,
                            CountyName = "Henry"
                        },
                        new
                        {
                            Id = 76,
                            CountyName = "Houston"
                        },
                        new
                        {
                            Id = 77,
                            CountyName = "Irwin"
                        },
                        new
                        {
                            Id = 78,
                            CountyName = "Jackson"
                        },
                        new
                        {
                            Id = 79,
                            CountyName = "Jasper"
                        },
                        new
                        {
                            Id = 80,
                            CountyName = "Jeff Davis"
                        },
                        new
                        {
                            Id = 81,
                            CountyName = "Jefferson"
                        },
                        new
                        {
                            Id = 82,
                            CountyName = "Jenkins"
                        },
                        new
                        {
                            Id = 83,
                            CountyName = "Johnson"
                        },
                        new
                        {
                            Id = 84,
                            CountyName = "Jones"
                        },
                        new
                        {
                            Id = 85,
                            CountyName = "Lamar"
                        },
                        new
                        {
                            Id = 86,
                            CountyName = "Lanier"
                        },
                        new
                        {
                            Id = 87,
                            CountyName = "Laurens"
                        },
                        new
                        {
                            Id = 88,
                            CountyName = "Lee"
                        },
                        new
                        {
                            Id = 89,
                            CountyName = "Liberty"
                        },
                        new
                        {
                            Id = 90,
                            CountyName = "Lincoln"
                        },
                        new
                        {
                            Id = 91,
                            CountyName = "Long"
                        },
                        new
                        {
                            Id = 92,
                            CountyName = "Lowndes"
                        },
                        new
                        {
                            Id = 93,
                            CountyName = "Lumpkin"
                        },
                        new
                        {
                            Id = 94,
                            CountyName = "Macon"
                        },
                        new
                        {
                            Id = 95,
                            CountyName = "Madison"
                        },
                        new
                        {
                            Id = 96,
                            CountyName = "Marion"
                        },
                        new
                        {
                            Id = 97,
                            CountyName = "McDuffie"
                        },
                        new
                        {
                            Id = 98,
                            CountyName = "McIntosh"
                        },
                        new
                        {
                            Id = 99,
                            CountyName = "Meriwether"
                        },
                        new
                        {
                            Id = 100,
                            CountyName = "Miller"
                        },
                        new
                        {
                            Id = 101,
                            CountyName = "Mitchell"
                        },
                        new
                        {
                            Id = 102,
                            CountyName = "Monroe"
                        },
                        new
                        {
                            Id = 103,
                            CountyName = "Montgomery"
                        },
                        new
                        {
                            Id = 104,
                            CountyName = "Morgan"
                        },
                        new
                        {
                            Id = 105,
                            CountyName = "Murray"
                        },
                        new
                        {
                            Id = 106,
                            CountyName = "Muscogee"
                        },
                        new
                        {
                            Id = 107,
                            CountyName = "Newton"
                        },
                        new
                        {
                            Id = 108,
                            CountyName = "Oconee"
                        },
                        new
                        {
                            Id = 109,
                            CountyName = "Oglethorpe"
                        },
                        new
                        {
                            Id = 110,
                            CountyName = "Paulding"
                        },
                        new
                        {
                            Id = 111,
                            CountyName = "Peach"
                        },
                        new
                        {
                            Id = 112,
                            CountyName = "Pickens"
                        },
                        new
                        {
                            Id = 113,
                            CountyName = "Pierce"
                        },
                        new
                        {
                            Id = 114,
                            CountyName = "Pike"
                        },
                        new
                        {
                            Id = 115,
                            CountyName = "Polk"
                        },
                        new
                        {
                            Id = 116,
                            CountyName = "Pulaski"
                        },
                        new
                        {
                            Id = 117,
                            CountyName = "Putnam"
                        },
                        new
                        {
                            Id = 118,
                            CountyName = "Quitman"
                        },
                        new
                        {
                            Id = 119,
                            CountyName = "Rabun"
                        },
                        new
                        {
                            Id = 120,
                            CountyName = "Randolph"
                        },
                        new
                        {
                            Id = 121,
                            CountyName = "Richmond"
                        },
                        new
                        {
                            Id = 122,
                            CountyName = "Rockdale"
                        },
                        new
                        {
                            Id = 123,
                            CountyName = "Schley"
                        },
                        new
                        {
                            Id = 124,
                            CountyName = "Screven"
                        },
                        new
                        {
                            Id = 125,
                            CountyName = "Seminole"
                        },
                        new
                        {
                            Id = 126,
                            CountyName = "Spalding"
                        },
                        new
                        {
                            Id = 127,
                            CountyName = "Stephens"
                        },
                        new
                        {
                            Id = 128,
                            CountyName = "Stewart"
                        },
                        new
                        {
                            Id = 129,
                            CountyName = "Sumter"
                        },
                        new
                        {
                            Id = 130,
                            CountyName = "Talbot"
                        },
                        new
                        {
                            Id = 131,
                            CountyName = "Taliaferro"
                        },
                        new
                        {
                            Id = 132,
                            CountyName = "Tattnall"
                        },
                        new
                        {
                            Id = 133,
                            CountyName = "Taylor"
                        },
                        new
                        {
                            Id = 134,
                            CountyName = "Telfair"
                        },
                        new
                        {
                            Id = 135,
                            CountyName = "Terrell"
                        },
                        new
                        {
                            Id = 136,
                            CountyName = "Thomas"
                        },
                        new
                        {
                            Id = 137,
                            CountyName = "Tift"
                        },
                        new
                        {
                            Id = 138,
                            CountyName = "Toombs"
                        },
                        new
                        {
                            Id = 139,
                            CountyName = "Towns"
                        },
                        new
                        {
                            Id = 140,
                            CountyName = "Treutlen"
                        },
                        new
                        {
                            Id = 141,
                            CountyName = "Troup"
                        },
                        new
                        {
                            Id = 142,
                            CountyName = "Turner"
                        },
                        new
                        {
                            Id = 143,
                            CountyName = "Twiggs"
                        },
                        new
                        {
                            Id = 144,
                            CountyName = "Union"
                        },
                        new
                        {
                            Id = 145,
                            CountyName = "Upson"
                        },
                        new
                        {
                            Id = 146,
                            CountyName = "Walker"
                        },
                        new
                        {
                            Id = 147,
                            CountyName = "Walton"
                        },
                        new
                        {
                            Id = 148,
                            CountyName = "Ware"
                        },
                        new
                        {
                            Id = 149,
                            CountyName = "Warren"
                        },
                        new
                        {
                            Id = 150,
                            CountyName = "Washington"
                        },
                        new
                        {
                            Id = 151,
                            CountyName = "Wayne"
                        },
                        new
                        {
                            Id = 152,
                            CountyName = "Webster"
                        },
                        new
                        {
                            Id = 153,
                            CountyName = "Wheeler"
                        },
                        new
                        {
                            Id = 154,
                            CountyName = "White"
                        },
                        new
                        {
                            Id = 155,
                            CountyName = "Whitfield"
                        },
                        new
                        {
                            Id = 156,
                            CountyName = "Wilcox"
                        },
                        new
                        {
                            Id = 157,
                            CountyName = "Wilkes"
                        },
                        new
                        {
                            Id = 158,
                            CountyName = "Wilkinson"
                        },
                        new
                        {
                            Id = 159,
                            CountyName = "Worth"
                        });
                });

            modelBuilder.Entity("Enfo.Domain.Entities.EnforcementOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Cause")
                        .HasColumnType("TEXT")
                        .HasMaxLength(3990);

                    b.Property<int?>("CommentContactId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("CommentPeriodClosesDate")
                        .HasColumnType("Date");

                    b.Property<string>("County")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(25);

                    b.Property<Guid?>("CreatedById")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset?>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Deleted")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ExecutedDate")
                        .HasColumnType("Date");

                    b.Property<DateTime?>("ExecutedOrderPostedDate")
                        .HasColumnType("Date");

                    b.Property<string>("FacilityName")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(205);

                    b.Property<DateTime?>("HearingCommentPeriodClosesDate")
                        .HasColumnType("Date");

                    b.Property<int?>("HearingContactId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("HearingDate")
                        .HasColumnType("Date");

                    b.Property<string>("HearingLocation")
                        .HasColumnType("TEXT")
                        .HasMaxLength(3990);

                    b.Property<bool>("IsExecutedOrder")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsHearingScheduled")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsProposedOrder")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LegalAuthorityId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("OrderNumber")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("ProposedOrderPostedDate")
                        .HasColumnType("Date");

                    b.Property<int>("PublicationStatus")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Requirements")
                        .HasColumnType("TEXT")
                        .HasMaxLength(3990);

                    b.Property<decimal?>("SettlementAmount")
                        .HasColumnType("money");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("BLOB");

                    b.Property<Guid?>("UpdatedById")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset?>("UpdatedDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CommentContactId");

                    b.HasIndex("HearingContactId");

                    b.HasIndex("LegalAuthorityId");

                    b.HasIndex("OrderNumber")
                        .IsUnique();

                    b.ToTable("EnforcementOrders");
                });

            modelBuilder.Entity("Enfo.Domain.Entities.EpdContact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Active")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AddressId")
                        .IsRequired()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ContactName")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.Property<Guid?>("CreatedById")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset?>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.Property<string>("Organization")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.Property<string>("Telephone")
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("BLOB");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.Property<Guid?>("UpdatedById")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset?>("UpdatedDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.ToTable("EpdContacts");

                    b.HasData(
                        new
                        {
                            Id = 2000,
                            Active = false,
                            AddressId = 2000,
                            ContactName = "Mr. Keith M. Bentley",
                            CreatedById = new Guid("cecdb2c3-101c-45ef-2f05-08d4881df634"),
                            CreatedDate = new DateTimeOffset(new DateTime(2017, 4, 27, 21, 13, 7, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, 0, 0, 0)),
                            Organization = "Environmental Protection Division",
                            Title = "Chief, Air Protection Branch",
                            UpdatedById = new Guid("c076cda6-8344-4bde-8a3a-2c96dc4de932"),
                            UpdatedDate = new DateTimeOffset(new DateTime(2017, 5, 3, 14, 33, 18, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, 0, 0, 0))
                        },
                        new
                        {
                            Id = 2001,
                            Active = false,
                            AddressId = 2001,
                            ContactName = "Mr. Jeff Cown",
                            CreatedById = new Guid("cecdb2c3-101c-45ef-2f05-08d4881df634"),
                            CreatedDate = new DateTimeOffset(new DateTime(2017, 4, 27, 21, 13, 7, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, 0, 0, 0)),
                            Organization = "Environmental Protection Division",
                            Title = "Chief, Land Protection Branch",
                            UpdatedById = new Guid("c076cda6-8344-4bde-8a3a-2c96dc4de932"),
                            UpdatedDate = new DateTimeOffset(new DateTime(2017, 5, 3, 14, 34, 1, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, 0, 0, 0))
                        },
                        new
                        {
                            Id = 2002,
                            Active = true,
                            AddressId = 2002,
                            ContactName = "Mr. Chuck Mueller",
                            CreatedById = new Guid("cecdb2c3-101c-45ef-2f05-08d4881df634"),
                            CreatedDate = new DateTimeOffset(new DateTime(2017, 4, 27, 21, 13, 7, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, 0, 0, 0)),
                            Email = "Chuck.mueller@dnr.ga.gov",
                            Organization = "Environmental Protection Division",
                            Title = "Chief, Land Protection Branch",
                            UpdatedById = new Guid("c076cda6-8344-4bde-8a3a-2c96dc4de932"),
                            UpdatedDate = new DateTimeOffset(new DateTime(2018, 9, 28, 13, 2, 35, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, 0, 0, 0))
                        },
                        new
                        {
                            Id = 2003,
                            Active = false,
                            AddressId = 2003,
                            ContactName = "Unknown",
                            CreatedById = new Guid("cecdb2c3-101c-45ef-2f05-08d4881df634"),
                            CreatedDate = new DateTimeOffset(new DateTime(2017, 4, 27, 21, 13, 7, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, 0, 0, 0)),
                            Organization = "None",
                            Title = "None",
                            UpdatedById = new Guid("cecdb2c3-101c-45ef-2f05-08d4881df634"),
                            UpdatedDate = new DateTimeOffset(new DateTime(2017, 4, 28, 1, 25, 5, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, 0, 0, 0))
                        },
                        new
                        {
                            Id = 2004,
                            Active = true,
                            AddressId = 2004,
                            ContactName = "Mr. James A. Capp",
                            CreatedById = new Guid("cecdb2c3-101c-45ef-2f05-08d4881df634"),
                            CreatedDate = new DateTimeOffset(new DateTime(2017, 4, 27, 21, 13, 7, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, 0, 0, 0)),
                            Email = "James.Capp@dnr.ga.gov",
                            Organization = "Environmental Protection Division",
                            Title = "Chief, Watershed Protection Branch",
                            UpdatedById = new Guid("c076cda6-8344-4bde-8a3a-2c96dc4de932"),
                            UpdatedDate = new DateTimeOffset(new DateTime(2017, 5, 3, 14, 50, 40, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, 0, 0, 0))
                        },
                        new
                        {
                            Id = 2007,
                            Active = false,
                            AddressId = 2007,
                            ContactName = "Ms. Mary Sheffield",
                            CreatedById = new Guid("cecdb2c3-101c-45ef-2f05-08d4881df634"),
                            CreatedDate = new DateTimeOffset(new DateTime(2017, 4, 27, 21, 13, 7, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, 0, 0, 0)),
                            Organization = "Environmental Protection Division",
                            Title = "Manager, Southwest District",
                            UpdatedById = new Guid("c076cda6-8344-4bde-8a3a-2c96dc4de932"),
                            UpdatedDate = new DateTimeOffset(new DateTime(2017, 5, 3, 14, 34, 15, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, 0, 0, 0))
                        },
                        new
                        {
                            Id = 2008,
                            Active = false,
                            AddressId = 2008,
                            ContactName = "Mr. Bruce Foisy",
                            CreatedById = new Guid("cecdb2c3-101c-45ef-2f05-08d4881df634"),
                            CreatedDate = new DateTimeOffset(new DateTime(2017, 4, 27, 21, 13, 7, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, 0, 0, 0)),
                            Organization = "Environmental Protection Division",
                            Title = "Manager, Coastal District Office",
                            UpdatedById = new Guid("c076cda6-8344-4bde-8a3a-2c96dc4de932"),
                            UpdatedDate = new DateTimeOffset(new DateTime(2017, 5, 3, 14, 34, 22, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, 0, 0, 0))
                        },
                        new
                        {
                            Id = 2009,
                            Active = false,
                            AddressId = 2009,
                            ContactName = "Mr. Todd Bethune",
                            CreatedById = new Guid("cecdb2c3-101c-45ef-2f05-08d4881df634"),
                            CreatedDate = new DateTimeOffset(new DateTime(2017, 4, 27, 21, 13, 7, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, 0, 0, 0)),
                            Organization = "Environmental Protection Division",
                            Title = "Manager, West Central District",
                            UpdatedById = new Guid("c076cda6-8344-4bde-8a3a-2c96dc4de932"),
                            UpdatedDate = new DateTimeOffset(new DateTime(2017, 5, 3, 14, 34, 29, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, 0, 0, 0))
                        },
                        new
                        {
                            Id = 2010,
                            Active = false,
                            AddressId = 2016,
                            ContactName = "Dr. Bert Langley",
                            CreatedById = new Guid("cecdb2c3-101c-45ef-2f05-08d4881df634"),
                            CreatedDate = new DateTimeOffset(new DateTime(2017, 4, 27, 21, 13, 7, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, 0, 0, 0)),
                            Email = "Bert.Langley@dnr.ga.gov",
                            Organization = "Environmental Protection Division",
                            Title = "Director Of Compliance",
                            UpdatedById = new Guid("cecdb2c3-101c-45ef-2f05-08d4881df634"),
                            UpdatedDate = new DateTimeOffset(new DateTime(2018, 3, 6, 8, 55, 1, 0, DateTimeKind.Unspecified), new TimeSpan(0, -5, 0, 0, 0))
                        },
                        new
                        {
                            Id = 2011,
                            Active = false,
                            AddressId = 2011,
                            ContactName = "Mr. Mike Rodock",
                            CreatedById = new Guid("cecdb2c3-101c-45ef-2f05-08d4881df634"),
                            CreatedDate = new DateTimeOffset(new DateTime(2017, 4, 27, 21, 13, 7, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, 0, 0, 0)),
                            Organization = "Environmental Protection Division",
                            Title = "Manager, Northeast District",
                            UpdatedById = new Guid("c076cda6-8344-4bde-8a3a-2c96dc4de932"),
                            UpdatedDate = new DateTimeOffset(new DateTime(2017, 5, 3, 14, 34, 36, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, 0, 0, 0))
                        },
                        new
                        {
                            Id = 2012,
                            Active = false,
                            AddressId = 2012,
                            ContactName = "Mr. Don McCarty",
                            CreatedById = new Guid("cecdb2c3-101c-45ef-2f05-08d4881df634"),
                            CreatedDate = new DateTimeOffset(new DateTime(2017, 4, 27, 21, 13, 7, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, 0, 0, 0)),
                            Organization = "Environmental Protection Division",
                            Title = "Manager, East Central District",
                            UpdatedById = new Guid("c076cda6-8344-4bde-8a3a-2c96dc4de932"),
                            UpdatedDate = new DateTimeOffset(new DateTime(2017, 5, 3, 14, 34, 47, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, 0, 0, 0))
                        },
                        new
                        {
                            Id = 2013,
                            Active = true,
                            AddressId = 2016,
                            ContactName = "Mr. James Cooley",
                            CreatedById = new Guid("cecdb2c3-101c-45ef-2f05-08d4881df634"),
                            CreatedDate = new DateTimeOffset(new DateTime(2017, 4, 27, 21, 13, 7, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, 0, 0, 0)),
                            Email = "james.cooley@dnr.ga.gov",
                            Organization = "Environmental Protection Division",
                            Telephone = "(770) 387-4929",
                            Title = "Director of District Operations",
                            UpdatedById = new Guid("cecdb2c3-101c-45ef-2f05-08d4881df634"),
                            UpdatedDate = new DateTimeOffset(new DateTime(2018, 3, 6, 8, 57, 35, 0, DateTimeKind.Unspecified), new TimeSpan(0, -5, 0, 0, 0))
                        },
                        new
                        {
                            Id = 2014,
                            Active = false,
                            AddressId = 2014,
                            ContactName = "Mr. Jeff Darley",
                            CreatedById = new Guid("cecdb2c3-101c-45ef-2f05-08d4881df634"),
                            CreatedDate = new DateTimeOffset(new DateTime(2017, 4, 27, 21, 13, 7, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, 0, 0, 0)),
                            Organization = "Environmental Protection Division",
                            Title = "Manager, East Central District",
                            UpdatedById = new Guid("c076cda6-8344-4bde-8a3a-2c96dc4de932"),
                            UpdatedDate = new DateTimeOffset(new DateTime(2017, 5, 3, 14, 34, 57, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, 0, 0, 0))
                        },
                        new
                        {
                            Id = 2015,
                            Active = true,
                            AddressId = 2015,
                            ContactName = "Ms. Karen Hays",
                            CreatedById = new Guid("cecdb2c3-101c-45ef-2f05-08d4881df634"),
                            CreatedDate = new DateTimeOffset(new DateTime(2017, 4, 27, 21, 13, 7, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, 0, 0, 0)),
                            Email = "Karen.Hays@dnr.ga.gov",
                            Organization = "Environmental Protection Division",
                            Title = "Chief, Air Protection Branch",
                            UpdatedById = new Guid("c076cda6-8344-4bde-8a3a-2c96dc4de932"),
                            UpdatedDate = new DateTimeOffset(new DateTime(2017, 5, 3, 14, 49, 34, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, 0, 0, 0))
                        });
                });

            modelBuilder.Entity("Enfo.Domain.Entities.LegalAuthority", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Active")
                        .HasColumnType("INTEGER");

                    b.Property<string>("AuthorityName")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.Property<Guid?>("CreatedById")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset?>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("BLOB");

                    b.Property<Guid?>("UpdatedById")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset?>("UpdatedDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("LegalAuthorities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            AuthorityName = "Air Quality Act",
                            CreatedById = new Guid("cecdb2c3-101c-45ef-2f05-08d4881df634"),
                            CreatedDate = new DateTimeOffset(new DateTime(2017, 4, 27, 21, 12, 57, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, 0, 0, 0)),
                            UpdatedById = new Guid("cecdb2c3-101c-45ef-2f05-08d4881df634"),
                            UpdatedDate = new DateTimeOffset(new DateTime(2019, 6, 20, 15, 44, 40, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, 0, 0, 0))
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            AuthorityName = "Asbestos Safety Act",
                            CreatedById = new Guid("cecdb2c3-101c-45ef-2f05-08d4881df634"),
                            CreatedDate = new DateTimeOffset(new DateTime(2017, 4, 27, 21, 12, 57, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, 0, 0, 0)),
                            UpdatedById = new Guid("cecdb2c3-101c-45ef-2f05-08d4881df634"),
                            UpdatedDate = new DateTimeOffset(new DateTime(2017, 4, 27, 21, 12, 57, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, 0, 0, 0))
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            AuthorityName = "Motor Vehicle Inspection and Maintenance Act",
                            CreatedById = new Guid("cecdb2c3-101c-45ef-2f05-08d4881df634"),
                            CreatedDate = new DateTimeOffset(new DateTime(2017, 4, 27, 21, 12, 57, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, 0, 0, 0)),
                            UpdatedById = new Guid("cecdb2c3-101c-45ef-2f05-08d4881df634"),
                            UpdatedDate = new DateTimeOffset(new DateTime(2017, 4, 27, 21, 12, 57, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, 0, 0, 0))
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            AuthorityName = "Hazardous Waste Management Act",
                            CreatedById = new Guid("cecdb2c3-101c-45ef-2f05-08d4881df634"),
                            CreatedDate = new DateTimeOffset(new DateTime(2017, 4, 27, 21, 12, 57, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, 0, 0, 0)),
                            UpdatedById = new Guid("cecdb2c3-101c-45ef-2f05-08d4881df634"),
                            UpdatedDate = new DateTimeOffset(new DateTime(2017, 4, 27, 21, 12, 57, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, 0, 0, 0))
                        },
                        new
                        {
                            Id = 5,
                            Active = true,
                            AuthorityName = "Hazardous Site Response Act",
                            CreatedById = new Guid("cecdb2c3-101c-45ef-2f05-08d4881df634"),
                            CreatedDate = new DateTimeOffset(new DateTime(2017, 4, 27, 21, 12, 57, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, 0, 0, 0)),
                            UpdatedById = new Guid("cecdb2c3-101c-45ef-2f05-08d4881df634"),
                            UpdatedDate = new DateTimeOffset(new DateTime(2017, 4, 27, 21, 12, 57, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, 0, 0, 0))
                        },
                        new
                        {
                            Id = 6,
                            Active = true,
                            AuthorityName = "Underground Storage Tank Act",
                            CreatedById = new Guid("cecdb2c3-101c-45ef-2f05-08d4881df634"),
                            CreatedDate = new DateTimeOffset(new DateTime(2017, 4, 27, 21, 12, 57, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, 0, 0, 0)),
                            UpdatedById = new Guid("cecdb2c3-101c-45ef-2f05-08d4881df634"),
                            UpdatedDate = new DateTimeOffset(new DateTime(2017, 4, 27, 21, 12, 57, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, 0, 0, 0))
                        },
                        new
                        {
                            Id = 7,
                            Active = true,
                            AuthorityName = "Comprehensive Solid Waste Management Act",
                            CreatedById = new Guid("cecdb2c3-101c-45ef-2f05-08d4881df634"),
                            CreatedDate = new DateTimeOffset(new DateTime(2017, 4, 27, 21, 12, 57, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, 0, 0, 0)),
                            UpdatedById = new Guid("cecdb2c3-101c-45ef-2f05-08d4881df634"),
                            UpdatedDate = new DateTimeOffset(new DateTime(2017, 4, 27, 21, 12, 57, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, 0, 0, 0))
                        },
                        new
                        {
                            Id = 8,
                            Active = true,
                            AuthorityName = "Water Quality Control Act (including Surface Water Allocation)",
                            CreatedById = new Guid("cecdb2c3-101c-45ef-2f05-08d4881df634"),
                            CreatedDate = new DateTimeOffset(new DateTime(2017, 4, 27, 21, 12, 57, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, 0, 0, 0)),
                            UpdatedById = new Guid("cecdb2c3-101c-45ef-2f05-08d4881df634"),
                            UpdatedDate = new DateTimeOffset(new DateTime(2017, 4, 27, 21, 12, 57, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, 0, 0, 0))
                        },
                        new
                        {
                            Id = 9,
                            Active = true,
                            AuthorityName = "River Basin Management Planning Act",
                            CreatedById = new Guid("cecdb2c3-101c-45ef-2f05-08d4881df634"),
                            CreatedDate = new DateTimeOffset(new DateTime(2017, 4, 27, 21, 12, 57, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, 0, 0, 0)),
                            UpdatedById = new Guid("cecdb2c3-101c-45ef-2f05-08d4881df634"),
                            UpdatedDate = new DateTimeOffset(new DateTime(2017, 4, 27, 21, 12, 57, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, 0, 0, 0))
                        },
                        new
                        {
                            Id = 10,
                            Active = true,
                            AuthorityName = "Erosion and Sedimentation Act",
                            CreatedById = new Guid("cecdb2c3-101c-45ef-2f05-08d4881df634"),
                            CreatedDate = new DateTimeOffset(new DateTime(2017, 4, 27, 21, 12, 57, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, 0, 0, 0)),
                            UpdatedById = new Guid("cecdb2c3-101c-45ef-2f05-08d4881df634"),
                            UpdatedDate = new DateTimeOffset(new DateTime(2017, 4, 27, 21, 12, 57, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, 0, 0, 0))
                        },
                        new
                        {
                            Id = 11,
                            Active = true,
                            AuthorityName = "Surface Mining Act",
                            CreatedById = new Guid("cecdb2c3-101c-45ef-2f05-08d4881df634"),
                            CreatedDate = new DateTimeOffset(new DateTime(2017, 4, 27, 21, 12, 57, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, 0, 0, 0)),
                            UpdatedById = new Guid("cecdb2c3-101c-45ef-2f05-08d4881df634"),
                            UpdatedDate = new DateTimeOffset(new DateTime(2017, 4, 27, 21, 12, 57, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, 0, 0, 0))
                        },
                        new
                        {
                            Id = 12,
                            Active = true,
                            AuthorityName = "Safe Dams Act",
                            CreatedById = new Guid("cecdb2c3-101c-45ef-2f05-08d4881df634"),
                            CreatedDate = new DateTimeOffset(new DateTime(2017, 4, 27, 21, 12, 57, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, 0, 0, 0)),
                            UpdatedById = new Guid("cecdb2c3-101c-45ef-2f05-08d4881df634"),
                            UpdatedDate = new DateTimeOffset(new DateTime(2017, 4, 27, 21, 12, 57, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, 0, 0, 0))
                        },
                        new
                        {
                            Id = 13,
                            Active = true,
                            AuthorityName = "Safe Drinking Water Act",
                            CreatedById = new Guid("cecdb2c3-101c-45ef-2f05-08d4881df634"),
                            CreatedDate = new DateTimeOffset(new DateTime(2017, 4, 27, 21, 12, 57, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, 0, 0, 0)),
                            UpdatedById = new Guid("cecdb2c3-101c-45ef-2f05-08d4881df634"),
                            UpdatedDate = new DateTimeOffset(new DateTime(2017, 4, 27, 21, 12, 57, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, 0, 0, 0))
                        },
                        new
                        {
                            Id = 14,
                            Active = true,
                            AuthorityName = "Groundwater Use Act",
                            CreatedById = new Guid("cecdb2c3-101c-45ef-2f05-08d4881df634"),
                            CreatedDate = new DateTimeOffset(new DateTime(2017, 4, 27, 21, 12, 57, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, 0, 0, 0)),
                            UpdatedById = new Guid("cecdb2c3-101c-45ef-2f05-08d4881df634"),
                            UpdatedDate = new DateTimeOffset(new DateTime(2017, 4, 27, 21, 12, 57, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, 0, 0, 0))
                        },
                        new
                        {
                            Id = 15,
                            Active = true,
                            AuthorityName = "Oil and Gas and Deep Drilling Act",
                            CreatedById = new Guid("cecdb2c3-101c-45ef-2f05-08d4881df634"),
                            CreatedDate = new DateTimeOffset(new DateTime(2017, 4, 27, 21, 12, 57, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, 0, 0, 0)),
                            UpdatedById = new Guid("cecdb2c3-101c-45ef-2f05-08d4881df634"),
                            UpdatedDate = new DateTimeOffset(new DateTime(2017, 4, 27, 21, 12, 57, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, 0, 0, 0))
                        },
                        new
                        {
                            Id = 16,
                            Active = true,
                            AuthorityName = "Radiation Control Act",
                            CreatedById = new Guid("cecdb2c3-101c-45ef-2f05-08d4881df634"),
                            CreatedDate = new DateTimeOffset(new DateTime(2017, 4, 27, 21, 12, 57, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, 0, 0, 0)),
                            UpdatedById = new Guid("cecdb2c3-101c-45ef-2f05-08d4881df634"),
                            UpdatedDate = new DateTimeOffset(new DateTime(2017, 4, 27, 21, 12, 57, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, 0, 0, 0))
                        },
                        new
                        {
                            Id = 17,
                            Active = true,
                            AuthorityName = "Oil or Hazardous Materials Spills or Releases Act",
                            CreatedById = new Guid("cecdb2c3-101c-45ef-2f05-08d4881df634"),
                            CreatedDate = new DateTimeOffset(new DateTime(2017, 4, 27, 21, 12, 57, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, 0, 0, 0)),
                            UpdatedById = new Guid("cecdb2c3-101c-45ef-2f05-08d4881df634"),
                            UpdatedDate = new DateTimeOffset(new DateTime(2017, 4, 27, 21, 12, 57, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, 0, 0, 0))
                        },
                        new
                        {
                            Id = 18,
                            Active = true,
                            AuthorityName = "Georgia Environmental Policy Act",
                            CreatedById = new Guid("cecdb2c3-101c-45ef-2f05-08d4881df634"),
                            CreatedDate = new DateTimeOffset(new DateTime(2017, 4, 27, 21, 12, 57, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, 0, 0, 0)),
                            UpdatedById = new Guid("cecdb2c3-101c-45ef-2f05-08d4881df634"),
                            UpdatedDate = new DateTimeOffset(new DateTime(2017, 4, 27, 21, 12, 57, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, 0, 0, 0))
                        },
                        new
                        {
                            Id = 19,
                            Active = true,
                            AuthorityName = "Lead Poisoning Prevention Act",
                            CreatedById = new Guid("cecdb2c3-101c-45ef-2f05-08d4881df634"),
                            CreatedDate = new DateTimeOffset(new DateTime(2017, 4, 27, 21, 12, 57, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, 0, 0, 0)),
                            UpdatedById = new Guid("cecdb2c3-101c-45ef-2f05-08d4881df634"),
                            UpdatedDate = new DateTimeOffset(new DateTime(2017, 4, 27, 21, 12, 57, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, 0, 0, 0))
                        },
                        new
                        {
                            Id = 20,
                            Active = true,
                            AuthorityName = "Water Well Standards Act",
                            CreatedById = new Guid("cecdb2c3-101c-45ef-2f05-08d4881df634"),
                            CreatedDate = new DateTimeOffset(new DateTime(2017, 4, 27, 21, 12, 57, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, 0, 0, 0)),
                            UpdatedById = new Guid("cecdb2c3-101c-45ef-2f05-08d4881df634"),
                            UpdatedDate = new DateTimeOffset(new DateTime(2017, 4, 27, 21, 12, 57, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, 0, 0, 0))
                        },
                        new
                        {
                            Id = 21,
                            Active = false,
                            AuthorityName = "Year 2000 Readiness Act",
                            CreatedById = new Guid("cecdb2c3-101c-45ef-2f05-08d4881df634"),
                            CreatedDate = new DateTimeOffset(new DateTime(2017, 4, 27, 21, 12, 57, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, 0, 0, 0)),
                            UpdatedById = new Guid("cecdb2c3-101c-45ef-2f05-08d4881df634"),
                            UpdatedDate = new DateTimeOffset(new DateTime(2017, 4, 27, 21, 12, 57, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, 0, 0, 0))
                        },
                        new
                        {
                            Id = 22,
                            Active = true,
                            AuthorityName = "Voluntary Remediation Program Act",
                            CreatedById = new Guid("cecdb2c3-101c-45ef-2f05-08d4881df634"),
                            CreatedDate = new DateTimeOffset(new DateTime(2017, 4, 27, 21, 12, 57, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, 0, 0, 0)),
                            UpdatedById = new Guid("cecdb2c3-101c-45ef-2f05-08d4881df634"),
                            UpdatedDate = new DateTimeOffset(new DateTime(2017, 4, 27, 21, 12, 57, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, 0, 0, 0))
                        });
                });

            modelBuilder.Entity("Enfo.Domain.Entities.EnforcementOrder", b =>
                {
                    b.HasOne("Enfo.Domain.Entities.EpdContact", "CommentContact")
                        .WithMany()
                        .HasForeignKey("CommentContactId");

                    b.HasOne("Enfo.Domain.Entities.EpdContact", "HearingContact")
                        .WithMany()
                        .HasForeignKey("HearingContactId");

                    b.HasOne("Enfo.Domain.Entities.LegalAuthority", "LegalAuthority")
                        .WithMany()
                        .HasForeignKey("LegalAuthorityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Enfo.Domain.Entities.EpdContact", b =>
                {
                    b.HasOne("Enfo.Domain.Entities.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
